// ===== Scroll Fade-in =====
const sections = document.querySelectorAll(".section");
const revealOnScroll = () => {
  sections.forEach(sec=>{
    const top = sec.getBoundingClientRect().top;
    if(top < window.innerHeight - 100) sec.classList.add("show");
  });
};
window.addEventListener("scroll", revealOnScroll);

// ===== Tilt Cards =====
const cards = document.querySelectorAll(".skill-card,.project-card,.cert-card");
cards.forEach(card=>{
  card.addEventListener("mousemove", e=>{
    const rect = card.getBoundingClientRect();
    const x = e.clientX - rect.left;
    const y = e.clientY - rect.top;
    const rotateX = (y - rect.height/2)/15;
    const rotateY = (rect.width/2 - x)/15;
    card.style.transform = `rotateX(${rotateX}deg) rotateY(${rotateY}deg) scale(1.1)`;
  });
  card.addEventListener("mouseleave",()=>{card.style.transform="rotateX(0) rotateY(0) scale(1)";});
});

// ===== 3D Interactive Cubes =====
const canvas = document.getElementById('bg-canvas');
const ctx = canvas.getContext('2d');
canvas.width = window.innerWidth;
canvas.height = window.innerHeight;

let cubes = [];
let mouse = {x:0, y:0};

function createCubes() {
  cubes = [];
  for(let i=0;i<100;i++){
    cubes.push({
      x: Math.random()*canvas.width - canvas.width/2,
      y: Math.random()*canvas.height - canvas.height/2,
      z: Math.random()*800,
      size: Math.random()*30 + 10,
      speed: Math.random()*0.5 + 0.2,
      angle: Math.random()*Math.PI*2,
      color: `hsl(${Math.random()*360}, 80%, 60%)`
    });
  }
}

function drawCubes() {
  ctx.clearRect(0,0,canvas.width,canvas.height);
  cubes.forEach(c => {
    const dx = (mouse.x - canvas.width/2)*0.001;
    const dy = (mouse.y - canvas.height/2)*0.001;

    c.x += dx*c.z*0.05;
    c.y += dy*c.z*0.05;

    const perspective = 500/(500+c.z);
    const size = c.size*perspective;
    const x = c.x*perspective + canvas.width/2;
    const y = c.y*perspective + canvas.height/2;

    ctx.save();
    ctx.translate(x, y);
    ctx.rotate(c.angle);
    ctx.fillStyle = c.color;
    ctx.shadowColor = c.color;
    ctx.shadowBlur = 20;
    ctx.fillRect(-size/2, -size/2, size, size);
    ctx.restore();

    c.z -= c.speed;
    if(c.z<1){ c.z=800; c.x = Math.random()*canvas.width - canvas.width/2; c.y = Math.random()*canvas.height - canvas.height/2; }
    c.angle += 0.02;
  });
  requestAnimationFrame(drawCubes);
}

window.addEventListener('mousemove', e=>{
  mouse.x = e.clientX;
  mouse.y = e.clientY;
});

window.addEventListener('resize', ()=>{
  canvas.width = window.innerWidth;
  canvas.height = window.innerHeight;
  createCubes();
});

createCubes();
drawCubes();
